import os
import json
import unicodedata

# Archivo donde se guarda el historial
HISTORIAL_FILE = "historial_reciclaje.txt"

# Impacto ecol√≥gico por tipo de residuo (valores aproximados)
IMPACTO_RESIDUOS = {
    "pl√°stico": {"agua": 3, "energia": 0.5, "co2": 0.2},
    "lata": {"agua": 5, "energia": 1.0, "co2": 0.5},
    "cart√≥n": {"agua": 2, "energia": 0.3, "co2": 0.1},
    "papel": {"agua": 4, "energia": 0.4, "co2": 0.2},
    "vidrio": {"agua": 1, "energia": 0.8, "co2": 0.3},
    "tetrapak": {"agua": 3, "energia": 0.6, "co2": 0.25},
    "textil": {"agua": 6, "energia": 1.5, "co2": 0.4},
    "electr√≥nico": {"agua": 10, "energia": 5.0, "co2": 2.0},
    "ninguna de estas": {"agua": 0, "energia": 0, "co2": 0},
    "no reciclable (pa√±ales, papel sucio, pilas, etc)": {"agua": 0, "energia": 0, "co2": 0}
    
}

# Elimina tildes del texto para una comparaci√≥n m√°s segura
def quitar_tildes(texto):
    return ''.join(
        c for c in unicodedata.normalize('NFD', texto)
        if unicodedata.category(c) != 'Mn'
    )

# Clasifica el tama√±o seg√∫n el alto del residuo
def clasificar_tama√±o(cm):
    if cm < 15:
        return "peque√±o", 0.8
    elif 15 <= cm <= 30:
        return "mediano", 1.0
    else:
        return "grande", 1.5

# Registrar un nuevo residuo
def registrar_residuo():
    print("\n¬øQu√© tipo de residuo desea registrar?")
    opciones = list(IMPACTO_RESIDUOS.keys())
    for idx, material in enumerate(opciones, 1):
        print(f"{idx}. {material.capitalize()}")

    seleccion = input("Ingrese el n√∫mero correspondiente: ").strip()
    if not seleccion.isdigit() or int(seleccion) not in range(1, len(opciones) + 1):
        print("‚ùå Selecci√≥n inv√°lida.")
        return

    tipo_seleccionado = opciones[int(seleccion) - 1]
    tipo_normalizado = quitar_tildes(tipo_seleccionado.lower())

    # ‚ö†Ô∏è Si es un residuo no reciclable, avisamos y confirmamos si desea continuar
    if "no reciclable" in tipo_normalizado:
        print("\n‚ö†Ô∏è Este residuo NO se puede reciclar.")
        print("‚ùå Ejemplos: pa√±ales, papel higi√©nico, papel sucio, colillas, pilas usadas, residuos org√°nicos contaminados.")
        continuar = input("¬øDese√°s registrarlo igualmente para llevar control? (si/no): ").strip().lower()
        if continuar != "si":
            print("‚ùå Registro cancelado.")
            return

    descripcion = input("Ingrese una descripci√≥n del residuo : ").strip()

    # Si es botella de pl√°stico, se pregunta por la capacidad
    if "botella" in tipo_normalizado and "plastico" in tipo_normalizado:
        respuesta = input("¬øSab√©s la capacidad de la botella en litros? (si/no): ").strip().lower()
        if respuesta == "si":
            litros = float(input("Ingrese la capacidad de la botella en litros (ej: 2): "))
            if litros >= 2:
                tama√±o, factor = "grande", 1.5
            elif litros >= 1:
                tama√±o, factor = "mediano", 1.0
            else:
                tama√±o, factor = "peque√±o", 0.8
        else:
            alto = float(input("Ingrese el alto del residuo en cm: "))
            ancho = float(input("Ingrese el ancho del residuo en cm: "))
            tama√±o, factor = clasificar_tama√±o(alto)
    else:
        alto = float(input("Ingrese el alto del residuo en cm: "))
        ancho = float(input("Ingrese el ancho del residuo en cm: "))
        tama√±o, factor = clasificar_tama√±o(alto)

    impacto = IMPACTO_RESIDUOS[tipo_seleccionado]
    impacto_escalado = {k: round(v * factor, 2) for k, v in impacto.items()}

    # Guarda en historial
    with open(HISTORIAL_FILE, "a") as f:
        f.write(json.dumps({
            "tipo": tipo_seleccionado,
            "descripcion": descripcion,
            "tama√±o": tama√±o,
            "factor_tama√±o": factor,
            "impacto": impacto_escalado
        }) + "\n")

    # Muestra resultados al usuario
    print("\n‚úÖ Residuo registrado correctamente.")
    print(f"Tipo: {tipo_seleccionado} - {descripcion}")
    print(f"Tama√±o estimado: {tama√±o} (factor {factor})")
    print(f"Impacto estimado: {impacto_escalado['agua']}L de agua, "
          f"{impacto_escalado['energia']}kWh de energ√≠a, {impacto_escalado['co2']}kg de CO‚ÇÇ.")

# Suma el impacto ecol√≥gico de todo lo registrado
def ver_impacto_acumulado():
    total = {"agua": 0, "energia": 0, "co2": 0}
    if os.path.exists(HISTORIAL_FILE):
        with open(HISTORIAL_FILE, "r") as f:
            for line in f:
                data = json.loads(line)
                for k in total:
                    total[k] += data["impacto"].get(k, 0)
    print("\nüåç Impacto acumulado:")
    print(f"üíß Agua ahorrada: {round(total['agua'], 2)}L")
    print(f"‚ö° Energ√≠a ahorrada: {round(total['energia'], 2)}kWh")
    print(f"üå± CO‚ÇÇ reducido: {round(total['co2'], 2)}kg")

# Borra el historial guardado
def limpiar_historial():
    if os.path.exists(HISTORIAL_FILE):
        os.remove(HISTORIAL_FILE)
        print("üóë Historial limpiado correctamente.")
    else:
        print("No hay historial para limpiar.")

# Men√∫ principal del programa
def menu():
    while True:
        print("\n=== ‚ôªÔ∏è ReciclApp - Men√∫ Principal ===")
        print("1. Registrar nuevo residuo")
        print("2. Ver impacto acumulado")
        print("3. Limpiar historial")
        print("4. Salir")
        opcion = input("Seleccione una opci√≥n: ").strip()

        if opcion == "1":
            registrar_residuo()
        elif opcion == "2":
            ver_impacto_acumulado()
        elif opcion == "3":
            limpiar_historial()
        elif opcion == "4":
            print("üëã ¬°Gracias por usar ReciclApp! üå±")
            break
        else:
            print("‚ö†Ô∏è Opci√≥n inv√°lida. Intente nuevamente.")

# Inicia el programa
menu()
